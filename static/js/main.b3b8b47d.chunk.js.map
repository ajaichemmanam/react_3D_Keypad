{"version":3,"sources":["logo.svg","components/Buttons.js","components/Keypad.js","components/KeyboardButtons.js","components/Keyboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Buttons","className","id","onClick","this","props","onDigit","onDelete","onEnter","onRegister","React","Component","Keypad","state","value","forceValue","isActive","registeredValue","registeredForceValue","showKeypad","handleClick","event","target","innerText","fvArray","force","push","newValue","concat","setState","handleChange","onChange","handleInputClick","handleDelete","fvalue","v","slice","length","fv","handleEnter","join","alert","handleRegister","handleClear","message","pressing","placeholder","onClear","Math","round","Pressure","polyfill","polyfillSpeedUp","polyfillSpeedDown","preventSelect","only","KeyboardButtons","shift","onShift","s","console","log","Keyboard","showKeyboard","App","useState","comp","setComp","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"mGAAAA,EAAOC,QAAU,IAA0B,kC,6SCGtBC,G,6KAEjB,OACE,yBAAKC,UAAU,WACb,4BAAQC,GAAG,QAAQC,QAASC,KAAKC,MAAMC,SAAvC,KAGA,4BAAQJ,GAAG,QAAQC,QAASC,KAAKC,MAAMC,SAAvC,KAGA,4BAAQJ,GAAG,OAAOC,QAASC,KAAKC,MAAMC,SAAtC,KAGA,4BAAQJ,GAAG,OAAOC,QAASC,KAAKC,MAAMC,SAAtC,KAGA,4BAAQJ,GAAG,OAAOC,QAASC,KAAKC,MAAMC,SAAtC,KAGA,4BAAQJ,GAAG,MAAMC,QAASC,KAAKC,MAAMC,SAArC,KAGA,4BAAQJ,GAAG,MAAMC,QAASC,KAAKC,MAAMC,SAArC,KAGA,4BAAQJ,GAAG,MAAMC,QAASC,KAAKC,MAAMC,SAArC,KAGA,4BAAQJ,GAAG,QAAQC,QAASC,KAAKC,MAAMC,SAAvC,KAGA,4BAAQJ,GAAG,QAAQC,QAASC,KAAKC,MAAME,UAAvC,OAIA,4BAAQL,GAAG,OAAOC,QAASC,KAAKC,MAAMC,SAAtC,KAGA,4BAAQJ,GAAG,QAAQC,QAASC,KAAKC,MAAMG,SAAvC,SAGA,4BAAQN,GAAG,WAAWC,QAASC,KAAKC,MAAMI,YAA1C,iB,GAzC6BC,IAAMC,YCCrCC,G,kNACJC,MAAQ,CACNC,MAAO,GACPC,WAAY,GACZC,UAAU,EACVC,gBAAiB,GACjBC,qBAAsB,GACtBC,YAAY,G,EAGdC,YAAc,SAACC,GACb,IAAMP,EAAQO,EAAMC,OAAOC,UAEvBC,EAAU,EAAKX,MAAME,WACrB,EAAKV,MAAMoB,MAAQ,GACrBD,EAAQE,KAAK,KAEbF,EAAQE,KAAK,KAEf,IACIC,EADe,EAAKd,MAAMC,MACFc,OAAOd,GACnC,EAAKe,SAAS,CACZf,MAAOa,EACPZ,WAAYS,K,EAKhBM,aAAe,SAACT,GACO,EAAKhB,MAAlB0B,U,EAGVC,iBAAmB,SAACX,GAClB,EAAKQ,SAAS,CAAEb,UAAU,K,EAG5BiB,aAAe,SAACZ,GACd,IAAMP,EAAQ,EAAKD,MAAMC,MACnBoB,EAAS,EAAKrB,MAAME,WACpBoB,EAAIrB,EAAMsB,MAAM,EAAGtB,EAAMuB,OAAS,GAClCC,EAAKJ,EAAOE,MAAM,EAAGF,EAAOG,OAAS,GAC3C,EAAKR,SAAS,CACZf,MAAOqB,EACPpB,WAAYuB,K,EAIhBC,YAAc,WAAO,IACX/B,EAAY,EAAKH,MAAjBG,QACM,EAAKK,MAAMC,MACrBN,IACE,EAAKK,MAAMC,MAAM0B,KAAK,MAAQ,EAAK3B,MAAMI,gBAAgBuB,KAAK,IAE9D,EAAK3B,MAAME,WAAWyB,KAAK,MAC3B,EAAK3B,MAAMK,qBAAqBsB,KAAK,IAErC,EAAKX,SAAS,CACZV,YAAY,IAGdsB,MAAM,kBAGRA,MAAM,iB,EAIZC,eAAiB,WACf,IAAM5B,EAAQ,EAAKD,MAAMC,MACzB,EAAKe,SAAS,CACZZ,gBAAiBH,EACjBI,qBAAsB,EAAKL,MAAME,WACjCD,MAAO,GACPC,WAAY,M,EAGhB4B,YAAc,WACZ,EAAKd,SAAS,CACZf,MAAO,GACPC,WAAY,M,uDAKd,IAAM6B,EAAUxC,KAAKC,MAAMwC,SAAW,cAAgB,WAEtD,OACE,6BACGzC,KAAKS,MAAMM,WACV,yBAAKlB,UAAU,UACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,WACb,8BACEA,UAAU,gBACVC,GAAG,UACHY,MAAOV,KAAKS,MAAMC,MAAM0B,KAAK,IAC7BT,SAAU3B,KAAK0B,aACf3B,QAASC,KAAK4B,iBACdc,YAAY,sBAIlB,kBAAC,EAAD,CACEC,QAAS3C,KAAKuC,YACdrC,QAASF,KAAKgB,YACdb,SAAUH,KAAK6B,aACfxB,WAAYL,KAAKsC,eACjBlC,QAASJ,KAAKmC,eAGhB,KACJ,2BAAIK,GACJ,8DACA,+BAAKI,KAAKC,MAAyB,IAAnB7C,KAAKC,MAAMoB,OAAe,IAA1C,e,GAjHad,cA8HNuC,MAAStC,EARR,CACduC,UAAU,EACVC,gBAAiB,IACjBC,kBAAmB,IACnBC,eAAe,EACfC,KAAM,OC5HaC,G,kNACnB3C,MAAQ,CACN4C,OAAO,G,EAGTC,QAAU,WACR,IAAIC,EAAI,EAAK9C,MAAM4C,MACnB,EAAK5B,SAAS,CAAE4B,OAAQE,IACxBC,QAAQC,IAAIF,I,uDAIZ,OACE,yBAAK1D,UAAU,mBACb,4BAAQC,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKsD,SAA7B,SAGA,4BAAQxD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,IAAIC,QAASC,KAAKC,MAAMC,SAChCF,KAAKS,MAAM4C,MAAQ,IAAM,KAE5B,4BAAQvD,GAAG,QAAQC,QAASC,KAAKC,MAAME,UAAvC,OAGA,4BAAQL,GAAG,QAAQC,QAASC,KAAKC,MAAMG,SAAvC,SAGA,4BAAQN,GAAG,WAAWC,QAASC,KAAKC,MAAMI,YAA1C,iB,GArGqCE,cCCvCmD,G,kNACJjD,MAAQ,CACNC,MAAO,GACPC,WAAY,GACZC,UAAU,EACVC,gBAAiB,GACjBC,qBAAsB,GACtB6C,cAAc,G,EAGhB3C,YAAc,SAACC,GACb,IAAMP,EAAQO,EAAMC,OAAOC,UAEvBC,EAAU,EAAKX,MAAME,WACrB,EAAKV,MAAMoB,MAAQ,GACrBD,EAAQE,KAAK,KAEbF,EAAQE,KAAK,KAEf,IACIC,EADe,EAAKd,MAAMC,MACFc,OAAOd,GACnC,EAAKe,SAAS,CACZf,MAAOa,EACPZ,WAAYS,K,EAKhBM,aAAe,SAACT,GACO,EAAKhB,MAAlB0B,U,EAGVC,iBAAmB,SAACX,GAClB,EAAKQ,SAAS,CAAEb,UAAU,K,EAG5BiB,aAAe,SAACZ,GACd,IAAMP,EAAQ,EAAKD,MAAMC,MACnBoB,EAAS,EAAKrB,MAAME,WACpBoB,EAAIrB,EAAMsB,MAAM,EAAGtB,EAAMuB,OAAS,GAClCC,EAAKJ,EAAOE,MAAM,EAAGF,EAAOG,OAAS,GAC3C,EAAKR,SAAS,CACZf,MAAOqB,EACPpB,WAAYuB,K,EAIhBC,YAAc,WAAO,IACX/B,EAAY,EAAKH,MAAjBG,QACM,EAAKK,MAAMC,MACrBN,IACE,EAAKK,MAAMC,MAAM0B,KAAK,MAAQ,EAAK3B,MAAMI,gBAAgBuB,KAAK,IAE9D,EAAK3B,MAAME,WAAWyB,KAAK,MAC3B,EAAK3B,MAAMK,qBAAqBsB,KAAK,IAErC,EAAKX,SAAS,CACZkC,cAAc,IAGhBtB,MAAM,kBAGRA,MAAM,iB,EAIZC,eAAiB,WACf,IAAM5B,EAAQ,EAAKD,MAAMC,MACzB,EAAKe,SAAS,CACZZ,gBAAiBH,EACjBI,qBAAsB,EAAKL,MAAME,WACjCD,MAAO,GACPC,WAAY,M,EAGhB4B,YAAc,WACZ,EAAKd,SAAS,CACZf,MAAO,GACPC,WAAY,M,uDAKd,IAAM6B,EAAUxC,KAAKC,MAAMwC,SAAW,cAAgB,WAEtD,OACE,6BACGzC,KAAKS,MAAMkD,aACV,yBAAK9D,UAAU,YACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,WACb,8BACEA,UAAU,gBACVC,GAAG,UACHY,MAAOV,KAAKS,MAAMC,MAAM0B,KAAK,IAC7BT,SAAU3B,KAAK0B,aACf3B,QAASC,KAAK4B,iBACdc,YAAY,qBAIlB,kBAAC,EAAD,CACEC,QAAS3C,KAAKuC,YACdrC,QAASF,KAAKgB,YACdb,SAAUH,KAAK6B,aACfxB,WAAYL,KAAKsC,eACjBlC,QAASJ,KAAKmC,eAGhB,KACJ,2BAAIK,GACJ,8DACA,+BAAKI,KAAKC,MAAyB,IAAnB7C,KAAKC,MAAMoB,OAAe,IAA1C,e,GAjHed,cA8HRuC,MAASY,EARR,CACdX,UAAU,EACVC,gBAAiB,IACjBC,kBAAmB,IACnBC,eAAe,EACfC,KAAM,OCtGOS,MApBf,WAAgB,IAAD,EACWtD,IAAMuD,UAAS,GAD1B,mBACNC,EADM,KACAC,EADA,KAGb,OACE,yBAAKlE,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKmE,IAAKC,IAAMpE,UAAU,WAAWqE,IAAI,SACzC,4BAAQrE,UAAU,aAAaE,QALjB,kBAAMgE,GAASD,KAM1BA,EAAO,cAAgB,iBAEzBA,EACC,kBAAC,EAAD,CAAU1D,QAAS,eAEnB,kBAAC,EAAD,CAAQA,QAAS,kBCNP+D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5B,QAAQ4B,MAAMA,EAAM5C,c","file":"static/js/main.b3b8b47d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport \"./Buttons.css\";\n\nexport default class Buttons extends React.Component {\n  render() {\n    return (\n      <div className=\"buttons\">\n        <button id=\"seven\" onClick={this.props.onDigit}>\n          7\n        </button>\n        <button id=\"eight\" onClick={this.props.onDigit}>\n          8\n        </button>\n        <button id=\"nine\" onClick={this.props.onDigit}>\n          9\n        </button>\n        <button id=\"four\" onClick={this.props.onDigit}>\n          4\n        </button>\n        <button id=\"five\" onClick={this.props.onDigit}>\n          5\n        </button>\n        <button id=\"six\" onClick={this.props.onDigit}>\n          6\n        </button>\n        <button id=\"one\" onClick={this.props.onDigit}>\n          1\n        </button>\n        <button id=\"two\" onClick={this.props.onDigit}>\n          2\n        </button>\n        <button id=\"three\" onClick={this.props.onDigit}>\n          3\n        </button>\n        <button id=\"clear\" onClick={this.props.onDelete}>\n          Del\n        </button>\n\n        <button id=\"zero\" onClick={this.props.onDigit}>\n          0\n        </button>\n        <button id=\"enter\" onClick={this.props.onEnter}>\n          Enter\n        </button>\n        <button id=\"register\" onClick={this.props.onRegister}>\n          Register\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Pressure from \"react-pressure\";\nimport Buttons from \"./Buttons\";\nimport \"./Keypad.css\";\nclass Keypad extends Component {\n  state = {\n    value: [],\n    forceValue: [],\n    isActive: false,\n    registeredValue: [],\n    registeredForceValue: [],\n    showKeypad: true,\n  };\n\n  handleClick = (event) => {\n    const value = event.target.innerText;\n    // if (value) {\n    let fvArray = this.state.forceValue;\n    if (this.props.force > 0.5) {\n      fvArray.push(\"1\");\n    } else {\n      fvArray.push(\"0\");\n    }\n    let currentValue = this.state.value;\n    let newValue = currentValue.concat(value);\n    this.setState({\n      value: newValue,\n      forceValue: fvArray,\n    });\n    // }\n  };\n\n  handleChange = (event) => {\n    const { onChange } = this.props;\n  };\n\n  handleInputClick = (event) => {\n    this.setState({ isActive: true });\n  };\n\n  handleDelete = (event) => {\n    const value = this.state.value;\n    const fvalue = this.state.forceValue;\n    const v = value.slice(0, value.length - 1);\n    const fv = fvalue.slice(0, fvalue.length - 1);\n    this.setState({\n      value: v,\n      forceValue: fv,\n    });\n  };\n\n  handleEnter = () => {\n    const { onEnter } = this.props;\n    const value = this.state.value;\n    if (onEnter) {\n      if (this.state.value.join(\"\") === this.state.registeredValue.join(\"\")) {\n        if (\n          this.state.forceValue.join(\"\") ===\n          this.state.registeredForceValue.join(\"\")\n        ) {\n          this.setState({\n            showKeypad: false,\n          });\n        } else {\n          alert(\"Force Mismatch\");\n        }\n      } else {\n        alert(\"Wrong Input\");\n      }\n    }\n  };\n  handleRegister = () => {\n    const value = this.state.value;\n    this.setState({\n      registeredValue: value,\n      registeredForceValue: this.state.forceValue,\n      value: [],\n      forceValue: [],\n    });\n  };\n  handleClear = () => {\n    this.setState({\n      value: [],\n      forceValue: [],\n    });\n  };\n\n  render() {\n    const message = this.props.pressing ? \"Stop please\" : \"Touch me\";\n\n    return (\n      <div>\n        {this.state.showKeypad ? (\n          <div className=\"keypad\">\n            <div className=\"display-toolbar\">\n              <div className=\"display\">\n                <textarea\n                  className=\"display-input\"\n                  id=\"display\"\n                  value={this.state.value.join(\"\")}\n                  onChange={this.handleChange}\n                  onClick={this.handleInputClick}\n                  placeholder=\"Enter Pass Code\"\n                />\n              </div>\n            </div>\n            <Buttons\n              onClear={this.handleClear}\n              onDigit={this.handleClick}\n              onDelete={this.handleDelete}\n              onRegister={this.handleRegister}\n              onEnter={this.handleEnter}\n            />\n          </div>\n        ) : null}\n        <p>{message}</p>\n        <p>Click to see 3D Touch in action</p>\n        <p> {Math.round(this.props.force * 100) / 100} force</p>\n      </div>\n    );\n  }\n}\nconst configs = {\n  polyfill: true,\n  polyfillSpeedUp: 1000,\n  polyfillSpeedDown: 1000,\n  preventSelect: true,\n  only: null,\n};\n\nexport default Pressure(Keypad, configs);\n","import React, { Component } from \"react\";\nimport \"./KeyboardButtons.css\";\n\nexport default class KeyboardButtons extends Component {\n  state = {\n    shift: false,\n  };\n\n  onShift = () => {\n    let s = this.state.shift;\n    this.setState({ shift: !s });\n    console.log(s);\n  };\n\n  render() {\n    return (\n      <div className=\"keyboardbuttons\">\n        <button id=\"q\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"Q\" : \"q\"}\n        </button>\n        <button id=\"w\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"W\" : \"w\"}\n        </button>\n        <button id=\"e\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"E\" : \"e\"}\n        </button>\n        <button id=\"r\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"R\" : \"r\"}\n        </button>\n        <button id=\"t\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"T\" : \"t\"}\n        </button>\n        <button id=\"y\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"Y\" : \"y\"}\n        </button>\n        <button id=\"u\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"U\" : \"u\"}\n        </button>\n        <button id=\"i\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"I\" : \"i\"}\n        </button>\n        <button id=\"o\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"O\" : \"o\"}\n        </button>\n        <button id=\"p\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"P\" : \"p\"}\n        </button>\n        <button id=\"a\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"A\" : \"a\"}\n        </button>\n        <button id=\"s\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"S\" : \"s\"}\n        </button>\n        <button id=\"d\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"D\" : \"d\"}\n        </button>\n        <button id=\"f\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"F\" : \"f\"}\n        </button>\n        <button id=\"g\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"G\" : \"g\"}\n        </button>\n        <button id=\"h\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"H\" : \"h\"}\n        </button>\n        <button id=\"j\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"J\" : \"j\"}\n        </button>\n        <button id=\"k\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"K\" : \"k\"}\n        </button>\n        <button id=\"l\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"L\" : \"l\"}\n        </button>\n        <button id=\"l\" onClick={this.onShift}>\n          Shift\n        </button>\n        <button id=\"z\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"Z\" : \"z\"}\n        </button>\n        <button id=\"x\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"X\" : \"x\"}\n        </button>\n        <button id=\"c\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"C\" : \"c\"}\n        </button>\n        <button id=\"v\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"V\" : \"v\"}\n        </button>\n        <button id=\"b\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"B\" : \"b\"}\n        </button>\n        <button id=\"n\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"N\" : \"n\"}\n        </button>\n        <button id=\"m\" onClick={this.props.onDigit}>\n          {this.state.shift ? \"M\" : \"m\"}\n        </button>\n        <button id=\"clear\" onClick={this.props.onDelete}>\n          Del\n        </button>\n        <button id=\"enter\" onClick={this.props.onEnter}>\n          Enter\n        </button>\n        <button id=\"register\" onClick={this.props.onRegister}>\n          Register\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Pressure from \"react-pressure\";\nimport KeyboardButtons from \"./KeyboardButtons\";\nimport \"./Keyboard.css\";\nclass Keyboard extends Component {\n  state = {\n    value: [],\n    forceValue: [],\n    isActive: false,\n    registeredValue: [],\n    registeredForceValue: [],\n    showKeyboard: true,\n  };\n\n  handleClick = (event) => {\n    const value = event.target.innerText;\n    // if (value) {\n    let fvArray = this.state.forceValue;\n    if (this.props.force > 0.5) {\n      fvArray.push(\"1\");\n    } else {\n      fvArray.push(\"0\");\n    }\n    let currentValue = this.state.value;\n    let newValue = currentValue.concat(value);\n    this.setState({\n      value: newValue,\n      forceValue: fvArray,\n    });\n    // }\n  };\n\n  handleChange = (event) => {\n    const { onChange } = this.props;\n  };\n\n  handleInputClick = (event) => {\n    this.setState({ isActive: true });\n  };\n\n  handleDelete = (event) => {\n    const value = this.state.value;\n    const fvalue = this.state.forceValue;\n    const v = value.slice(0, value.length - 1);\n    const fv = fvalue.slice(0, fvalue.length - 1);\n    this.setState({\n      value: v,\n      forceValue: fv,\n    });\n  };\n\n  handleEnter = () => {\n    const { onEnter } = this.props;\n    const value = this.state.value;\n    if (onEnter) {\n      if (this.state.value.join(\"\") === this.state.registeredValue.join(\"\")) {\n        if (\n          this.state.forceValue.join(\"\") ===\n          this.state.registeredForceValue.join(\"\")\n        ) {\n          this.setState({\n            showKeyboard: false,\n          });\n        } else {\n          alert(\"Force Mismatch\");\n        }\n      } else {\n        alert(\"Wrong Input\");\n      }\n    }\n  };\n  handleRegister = () => {\n    const value = this.state.value;\n    this.setState({\n      registeredValue: value,\n      registeredForceValue: this.state.forceValue,\n      value: [],\n      forceValue: [],\n    });\n  };\n  handleClear = () => {\n    this.setState({\n      value: [],\n      forceValue: [],\n    });\n  };\n\n  render() {\n    const message = this.props.pressing ? \"Stop please\" : \"Touch me\";\n\n    return (\n      <div>\n        {this.state.showKeyboard ? (\n          <div className=\"keyboard\">\n            <div className=\"display-toolbar\">\n              <div className=\"display\">\n                <textarea\n                  className=\"display-input\"\n                  id=\"display\"\n                  value={this.state.value.join(\"\")}\n                  onChange={this.handleChange}\n                  onClick={this.handleInputClick}\n                  placeholder=\"Enter Password\"\n                />\n              </div>\n            </div>\n            <KeyboardButtons\n              onClear={this.handleClear}\n              onDigit={this.handleClick}\n              onDelete={this.handleDelete}\n              onRegister={this.handleRegister}\n              onEnter={this.handleEnter}\n            />\n          </div>\n        ) : null}\n        <p>{message}</p>\n        <p>Click to see 3D Touch in action</p>\n        <p> {Math.round(this.props.force * 100) / 100} force</p>\n      </div>\n    );\n  }\n}\nconst configs = {\n  polyfill: true,\n  polyfillSpeedUp: 1000,\n  polyfillSpeedDown: 1000,\n  preventSelect: true,\n  only: null,\n};\n\nexport default Pressure(Keyboard, configs);\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Keypad from \"./components/Keypad.js\";\nimport Keyboard from \"./components/Keyboard.js\";\nfunction App() {\n  const [comp, setComp] = React.useState(false);\n  const handleClick = () => setComp(!comp);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <button className=\"CompSwitch\" onClick={handleClick}>\n          {comp ? \"Show Keypad\" : \"Show Keyboard\"}\n        </button>\n        {comp ? (\n          <Keyboard onEnter={function () {}} />\n        ) : (\n          <Keypad onEnter={function () {}} />\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}